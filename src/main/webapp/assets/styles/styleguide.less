/* This file has the site LESS but also some extra styles for styleguide presentation */
@import "site.less";

/* Styles for main documentation section */

/*
 * Extending the base container, but providing a modifier for a white background.
 * We do not want to do .container { background:@white; } and just use that. This is the sg-container after all
 */
.sg-container {
    &:extend(.container all);

    background:@white;
}

/*
 * Another example where we name something by what it is. We could have done the "list-inline" style right in the DOM
 * but then we are stuck with an inline list unless we change the DOM. This way, our styles are in the LESS where they belong
 */
.sg-nav-list {
  &:extend(.list-inline all);
  margin:0;

  /* We are using a modifier on our object here. We don't need to define a class for each li */
  > li {
    padding: @space @space-double @space 0;
  }
}

.sg-page-header {
  &:extend(.header2);

  background: @brand-primary;
  color: @white;
  margin:0 -(@grid-gutter-width / 2) @space;
  padding: @space;
}

.sg-section {
    margin-bottom:@space-double;
}
.sg-section-header {
  &:extend(.header3);
}

.sg-section-subhead {
  &:extend(.header4);
}

.sg-simple-list {
  &:extend(.list all);
  margin-left:@space;
}

.sg-example {
  position: relative;
  padding: @space-quad @space @space @space;
  margin: 0 0 @space;
  background-color: @gray-light-1;
  box-shadow: inset 0 3px 6px rgba(0,0,0,.05);
  border: @border-style-4;

  /* Echo out a label for the example */
  &:after {
    content: "Example";
    position: absolute;
    top:  @space;
    left: @space;
    color: #bbb;
    font-weight: bold;
    text-transform: uppercase;
    .type-scale(-1);
  }
}

.sg-code-css {
    &:extend(.sg-example);
    padding: @space;
    .type-scale(-1);
}

.sg-table {
    &:extend(.table all);
}







/* Styles to present individual examples with a better look */

/* provides visual spacing examples */
.sg-space {
    border-top: @border-style-2;
    border-bottom: @border-style-2;
    height: @space;
}
.sg-space-quarter {
    &:extend(.sg-space);
    height: @space-quarter;
}
.sg-space-half {
    &:extend(.sg-space all);
    height: @space-half;
}
.sg-space-three-quarter {
    &:extend(.sg-space);
    height: @space-three-quarter;
}
.sg-space-and-half {
    &:extend(.sg-space);
    height: @space-and-half;
}
.sg-space-double {
    &:extend(.sg-space);
    height: @space-double;
}
.sg-space-triple {
    &:extend(.sg-space);
    height: @space-triple;
}
.sg-space-quad {
    &:extend(.sg-space);
    height: @space-quad;
}


/* borders */
.sg-border-style {
    width:100px;
    height:100px;
}
.sg-border-style-1 {
    &:extend(.sg-border-style);
    border:@border-style-1;
    background: @white;
}
.sg-border-style-2 {
    &:extend(.sg-border-style);
    border:@border-style-2;
}
.sg-border-style-3 {
    &:extend(.sg-border-style);
    border:@border-style-3;
}
.sg-border-style-4 {
    &:extend(.sg-border-style);
    border:@border-style-4;
}


/* blocks */
.sg-block {
  &:extend(.block all);
  margin-bottom:@space;
}
.sg-block-text-right {
  &:extend(.block-text-right all);
  margin-bottom:@space;
}

